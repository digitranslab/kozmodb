name: ci

on:
  push:
    branches: [main]
#    paths:
#      - 'kozmodb/**'
#      - 'tests/**'
#      - 'kozmochain/**'
#  pull_request:
#    paths:
#      - 'kozmodb/**'
#      - 'tests/**'
#      - 'kozmochain/**'

jobs:
#  check_changes:
#    runs-on: ubuntu-latest
#    outputs:
#      kozmodb_changed: ${{ steps.filter.outputs.kozmodb }}
#      kozmochain_changed: ${{ steps.filter.outputs.kozmochain }}
#    steps:
#    - uses: actions/checkout@v3
#    - uses: dorny/paths-filter@v2
#      id: filter
#      with:
#        filters: |
#          kozmodb:
#            - 'kozmodb/**'
#            - 'tests/**'
#          kozmochain:
#            - 'kozmochain/**'

  build_kozmodb:
    needs: check_changes
#    if: needs.check_changes.outputs.kozmodb_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgeos-dev libproj-dev libgdal-dev swig
      - name: Install Hatch
        run: pip install hatch
      - name: Load cached venv
        id: cached-hatch-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-kozmodb-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install dependencies
        timeout-minutes: 20
        env:
          PIP_TIMEOUT: 60
          PIP_RETRIES: 3
          PIP_CACHE_DIR: /tmp/pip-cache
        run: |
          make install_all
          pip install -e ".[test]"
          pip install pinecone pinecone-text
#        if: steps.cached-hatch-dependencies.outputs.cache-hit != 'true'
      - name: Run Formatting
        run: |
          mkdir -p .ruff_cache && chmod -R 777 .ruff_cache
          hatch run format
      - name: Run tests and generate coverage report
        env:
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
        run: make test

  build_kozmochain:
    needs: check_changes
#    if: needs.check_changes.outputs.kozmochain_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        env:
          POETRY_VERSION: "1.6.1"
      - name: Install Hatch
        run: pip install hatch
      - name: Load cached venv
        id: cached-hatch-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-kozmochain-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install dependencies
        timeout-minutes: 20
        env:
          PIP_TIMEOUT: 60
          PIP_RETRIES: 3
          PIP_CACHE_DIR: /tmp/pip-cache
        run: |
          $HOME/.local/bin/poetry --version
          cd kozmochain && make install_all
#        if: steps.cached-hatch-dependencies.outputs.cache-hit != 'true'
      - name: Run Formatting
        run: |
          mkdir -p kozmochain/.ruff_cache && chmod -R 777 kozmochain/.ruff_cache
          cd kozmochain && hatch run format
      - name: Lint with ruff
        run: cd kozmochain && make lint
      - name: Run tests and generate coverage report
        env:
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
        run: cd kozmochain && make coverage
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          file: coverage.xml
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}