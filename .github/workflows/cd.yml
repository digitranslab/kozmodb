name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  push:
    branches: [ main ]

  release:
    types: [published]

jobs:
  build-n-publish-kozmodb:
    name: Build and publish kozmodb to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: |
          pip install hatch

      - name: Install dependencies
        run: |
          hatch env create

      - name: Build a binary wheel and a source tarball
        run: |
          hatch build --clean

      - name: Check if version exists on PyPI
        id: check_version
        run: |
          VERSION=$(hatch version)
          echo "Version: $VERSION"
          
          # Check if version exists on PyPI
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://pypi.org/pypi/kozmodb/$VERSION/json")
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "Version $VERSION already exists on PyPI"
            echo "skip_upload=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist on PyPI, proceeding with upload"
            echo "skip_upload=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish distribution to PyPI
        if: steps.check_version.outputs.skip_upload == 'false'
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-n-publish-kozmograph:
    name: Build and publish kozmograph to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build kozmograph package
        run: |
          cd kozmograph
          poetry build

      - name: Check if kozmograph version exists on PyPI
        id: check_kozmograph_version
        run: |
          cd kozmograph
          VERSION=$(poetry version -s)
          echo "Kozmograph Version: $VERSION"
          
          # Check if version exists on PyPI (package name is langchain-kozmograph)
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://pypi.org/pypi/langchain-kozmograph/$VERSION/json")
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "Version $VERSION already exists on PyPI"
            echo "skip_upload=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist on PyPI, proceeding with upload"
            echo "skip_upload=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish kozmograph to PyPI
        if: steps.check_kozmograph_version.outputs.skip_upload == 'false'
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: kozmograph/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-n-publish-kozmochain:
    name: Build and publish kozmochain to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build kozmochain package
        run: |
          cd kozmochain
          poetry build

      - name: Check if kozmochain version exists on PyPI
        id: check_kozmochain_version
        run: |
          cd kozmochain
          VERSION=$(poetry version -s)
          echo "Kozmochain Version: $VERSION"
          
          # Check if version exists on PyPI
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://pypi.org/pypi/kozmochain/$VERSION/json")
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "Version $VERSION already exists on PyPI"
            echo "skip_upload=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist on PyPI, proceeding with upload"
            echo "skip_upload=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish kozmochain to PyPI
        if: steps.check_kozmochain_version.outputs.skip_upload == 'false'
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: kozmochain/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
