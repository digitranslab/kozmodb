name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI

on:
  push:
    branches: [ main ]

  release:
    types: [published]

jobs:
  build-n-publish-kozmodb:
    name: Build and publish kozmodb to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Hatch
        run: |
          pip install hatch

      - name: Install dependencies
        run: |
          hatch env create

      - name: Build a binary wheel and a source tarball
        run: |
          hatch build --clean

      - name: Publish distribution to PyPI
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-n-publish-kozmograph:
    name: Build and publish kozmograph to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build kozmograph package
        run: |
          cd kozmograph
          poetry build

      - name: Publish kozmograph to PyPI
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: kozmograph/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-n-publish-kozmochain:
    name: Build and publish kozmochain to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build kozmochain package
        run: |
          cd kozmochain
          poetry build

      - name: Publish kozmochain to PyPI
#        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: kozmochain/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
